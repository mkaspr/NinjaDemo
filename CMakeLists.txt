cmake_minimum_required(VERSION 2.8)
project(DarpaDemo)

# find packages

list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
list(APPEND REQUIRED_INCLUDE_DIRS ${CMAKE_SOURCE_DIR})
list(APPEND REQUIRED_INCLUDE_DIRS ${CMAKE_BINARY_DIR})

find_package(GFlags REQUIRED)
list(APPEND REQUIRED_INCLUDE_DIRS ${GFlags_INCLUDE_DIRS})
list(APPEND REQUIRED_LIBRARIES ${GFlags_LIBRARIES})

find_package(GLog REQUIRED)
list(APPEND REQUIRED_INCLUDE_DIRS ${GLog_INCLUDE_DIRS})
list(APPEND REQUIRED_LIBRARIES ${GLog_LIBRARIES})

find_package(HAL REQUIRED)
list(APPEND REQUIRED_INCLUDE_DIRS ${HAL_INCLUDE_DIRS})
list(APPEND REQUIRED_LIBRARIES ${HAL_LIBRARIES})

find_package(Matchbox REQUIRED)
list(APPEND REQUIRED_INCLUDE_DIRS ${MATCHBOX_INCLUDE_DIRS})
list(APPEND REQUIRED_LIBRARIES ${MATCHBOX_LIBRARIES})

find_package(Vulcan REQUIRED)
list(APPEND REQUIRED_INCLUDE_DIRS ${VULCAN_INCLUDE_DIRS})
list(APPEND REQUIRED_LIBRARIES ${VULCAN_LIBRARIES})

# set compiler flags

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

# build executable

include_directories(${REQUIRED_INCLUDE_DIRS})
add_executable(darpa_demo main.cpp)
target_link_libraries(darpa_demo ${REQUIRED_LIBRARIES})
